package Controller;

<<<<<<< HEAD
import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
=======
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.sql.SQLException;
import java.util.logging.Logger;

import javax.swing.JButton;
>>>>>>> origin/project1
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;

<<<<<<< HEAD
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

import com.google.gson.Gson;

=======
import javax.swing.JOptionPane;

import com.google.gson.Gson;

import Model.Customers_DAO;
>>>>>>> origin/project1
import Model.Message;
import Model.PCChatData;
import View.AdminView;
import View.CusManager;
import View.GUIView;
import View.LoginView;
import View.ProdManager;
import View.SignUpView;

public class PCController implements Runnable {
<<<<<<< HEAD
	private final LoginView LV;
	private final CusManager CM;
	private final ProdManager PM;
	private final GUIView GUI;
	private final AdminView AV;
	private final SignUpView SUV;
	private final C_login cl;

	private final PCChatData CMchatData;
	private final PCChatData GUIchatData;
	
//	ArrayList<>
	
//	JViewport jp = new JViewport();
//	JPanel panel = new JPanel();
//	CardLayout card = new CardLayout();
//	panel.setLayout(card);
//	panel.add(vp, "hoit");
//	panel.add(jp, "hosss");
//	
//	add(panel, BorderLayout.CENTER);
//	card.show(panel, "hoit");
	
	Gson gson = new Gson();

	// ∏ﬁΩ√¡ˆ ≈¨∑°Ω∫ ¬¸¡∂ ∞¥√º
	Message m;
	// ∑Œ∞≈ ∞¥√º
	Logger logger;

=======
	public final LoginView LV;
	public final CusManager CM;
	public final ProdManager PM;
	public final GUIView GUI;
	public final AdminView AV;
	public final SignUpView SUV;
	public final C_login cl;
	public final C_SignUp cs;
	public final C_ProdManager cp;
	public final PCChatData chatData;
	public final PCChatData chatData2;
	public static Customers_DAO dao;

	Gson gson = new Gson();

	// Î©îÏãúÏßÄ ÌÅ¥ÎûòÏä§ Ï∞∏Ï°∞ Í∞ùÏ≤¥
	Message m;
	// Î°úÍ±∞ Í∞ùÏ≤¥
	Logger logger;
>>>>>>> origin/project1
	String ip = "127.0.0.1";
	Socket socket;
	BufferedReader inMsg;
	PrintWriter outMsg;
	Thread thread;
	boolean status;
<<<<<<< HEAD

	boolean comboFlag = false;
<<<<<<< HEAD
	
=======
>>>>>>> 0dc03679d7d637e8d09dc6b4506f4b2e92edcc2f
	public PCController(LoginView LV, CusManager CM, ProdManager PM, GUIView GUI, AdminView AV, SignUpView SUV,
			C_login cl, PCChatData CMchatData, PCChatData GUIchatData) {
		// ∑Œ∞≈ ∞¥√º √ ±‚»≠
		logger = Logger.getLogger(this.getClass().getName());

		this.LV = LV;
		this.CM = CM;
		this.PM = PM;
		this.GUI = GUI;
		this.AV = AV;
		this.SUV = SUV;
		this.cl = cl;

		this.CMchatData = CMchatData;
		this.GUIchatData = GUIchatData;
	}

	public void appMain() {
		// µ•¿Ã≈Õ ∞¥√ºø°º≠ µ•¿Ã≈Õ ∫Ø»≠∏¶ √≥∏Æ«“ UI ∞¥√º √ﬂ∞°, ta2¥¬ TextArea¿Ã¥Ÿ.
		CMchatData.addObjCus(CM.chatContent);
		GUIchatData.addObjGUI(GUI.ta2);
		CMchatData.addObjCombo(CM.chatComboBox);
<<<<<<< HEAD
=======
		
>>>>>>> 0dc03679d7d637e8d09dc6b4506f4b2e92edcc2f
		LV.addButtonActionListener(new ActionListener() { // ∑Œ±◊¿Œ ∫‰ ∑π¿Ãæ∆øÙ
			@Override
			public void actionPerformed(ActionEvent e) {
				Object obj = e.getSource();
				if (obj == LV.loginbt) { // ∑Œ±◊¿Œ πˆ∆∞¿ª ¥≠∑∂¿ª ∂ß
					if (LV.server.isSelected()) { // server modeø° √º≈© µ«æÓ¿÷¿ª ∞ÊøÏ
						LV.cardLayout.show(LV.window, "admin");
						CM.loginFlag = true;
						cl.Mode_Check();
						/* ∞¸∏Æ¿⁄ ∑Œ±◊¿Œ µÈæÓ∞¨¿ª ∞ÊøÏ ¿Ã∫•∆Æ √≥∏Æ */
//						CM.chatContent
						connectServer();
<<<<<<< HEAD
=======
						
>>>>>>> 0dc03679d7d637e8d09dc6b4506f4b2e92edcc2f
//						comboFlag = true;
					} else if (LV.user.isSelected()) { // user modeø° √º≈© µ«æÓ¿÷¿ª ∞ÊøÏ
						LV.setVisible(false);
						LV.GV.getInstance().setVisible(true);
						cl.Mode_Check();
						/* ªÁøÎ¿⁄ ∑Œ±◊¿Œ µÈæÓ∞¨¿ª ∞ÊøÏ ¿Ã∫•∆Æ √≥∏Æ */
						GUI.id = LV.loginTextField.getText();
						GUI.la[0].setText("æ∆¿Ãµ : " + GUI.id);
						connectServer();
						
//						comboFlag = true;
						
//						dm.addElement(m.getSeat());
//						CM.chatComboBox.setModel(dm);
//						dm.setSelectedItem(m.getSeat());
//						CM.chatComboBox.addItem(m.getSeat());
//						CM.seatPanel.add(CM.chatComboBox);
//						CMchatData.refreshData(CM.chatComboBox);
					} else {

					}
				} else if (obj == LV.SignUpbtn) { // »∏ø¯∞°¿‘ πˆ∆∞¿ª ¥≠∑∂¿ª ∞ÊøÏ
					LV.cardLayout.show(LV.window, "signUp");
					cl.Mode_Check();
				} else if (obj == LV.previousBtn) { // ≈¯πŸ ¿Ã¿¸ πˆ∆∞¿ª ¥≠∑∂¿ª ∞ÊøÏ
					LV.cardLayout.show(LV.window, "layer");
					cl.Mode_Check();
=======
	
	public PCController(LoginView LV, CusManager CM, ProdManager PM, GUIView GUI, AdminView AV, SignUpView SUV, C_login cl, C_SignUp cs, C_ProdManager cp, PCChatData chatData, PCChatData chatData2) {
		// Î°úÍ±∞ Í∞ùÏ≤¥ Ï¥àÍ∏∞Ìôî
		logger = Logger.getLogger(this.getClass().getName());
		
		this.LV = LV;				// LoginView Ï∞∏Ï°∞Í∞ùÏ≤¥ Ïó∞Í≤∞
		this.CM = CM;				// CusManager Ï∞∏Ï°∞Í∞ùÏ≤¥ Ïó∞Í≤∞
		this.PM = PM;				// ProdManager Ï∞∏Ï°∞Í∞ùÏ≤¥ Ïó∞Í≤∞
		this.GUI = GUI;				// GUIView Ï∞∏Ï°∞Í∞ùÏ≤¥ Ïó∞Í≤∞
		this.AV = AV;				// AdminView Ï∞∏Ï°∞Í∞ùÏ≤¥ Ïó∞Í≤∞
		this.SUV = SUV;				// SignUpView Ï∞∏Ï°∞Í∞ùÏ≤¥ Ïó∞Í≤∞
		this.cl = cl;				// C_login Ï∞∏Ï°∞Í∞ùÏ≤¥ Ïó∞Í≤∞
		this.cs = cs;				// C_SignUp Ï∞∏Ï°∞Í∞ùÏ≤¥ Ïó∞Í≤∞
		this.cp = cp;				// C_ProdManager Ï∞∏Ï°∞Í∞ùÏ≤¥ Ïó∞Í≤∞
		this.chatData = chatData;	// PCChatData Ï∞∏Ï°∞Í∞ùÏ≤¥ Ïó∞Í≤∞
		this.chatData2 = chatData2;	// PCChatData2 Ï∞∏Ï°∞Í∞ùÏ≤¥ Ïó∞Í≤∞
	}

	public void appMain() {
		// Îç∞Ïù¥ÌÑ∞ Í∞ùÏ≤¥ÏóêÏÑú Îç∞Ïù¥ÌÑ∞ Î≥ÄÌôîÎ•º Ï≤òÎ¶¨Ìï† UI Í∞ùÏ≤¥ Ï∂îÍ∞Ä, ta2Îäî TextAreaÏù¥Îã§.
		chatData.addObjCus(CM.chatContent);
		chatData2.addObjGUI(GUI.ta2);
		
		// Î°úÍ∑∏Ïù∏ Î∑∞ Ïù¥Î≤§Ìä∏ Ï≤òÎ¶¨
		LV.addButtonActionListener(new ActionListener() { // Î°úÍ∑∏Ïù∏ Î∑∞ Î†àÏù¥ÏïÑÏõÉ
			@Override
			public void actionPerformed(ActionEvent e) {
				Object obj = e.getSource();
				if (obj == LV.loginbt) { // Î°úÍ∑∏Ïù∏ Î≤ÑÌäºÏùÑ ÎàåÎ†ÄÏùÑ Îïå
					if (LV.server.isSelected()) { // server modeÏóê Ï≤¥ÌÅ¨ ÎêòÏñ¥ÏûàÏùÑ Í≤ΩÏö∞ (Í¥ÄÎ¶¨Ïûê cMODE : 0)
						if(cl.Mode_Check(LV.loginTextField.getText(), LV.passwordField.getText(), 0)) {
							// ------- Î°úÍ∑∏Ïù∏ ÏÑ±Í≥µ!! -------
							LV.cardLayout.show(LV.window, "admin");
							CM.loginFlag = true;
							
							/* Í¥ÄÎ¶¨Ïûê Î°úÍ∑∏Ïù∏ Îì§Ïñ¥Í∞îÏùÑ Í≤ΩÏö∞ Ïù¥Î≤§Ìä∏ Ï≤òÎ¶¨ */
							connectServer();
						}
						else {
							// ------- Î°úÍ∑∏Ïù∏ Ïã§Ìå®... -------
							return;
						}
						
					} else if (LV.user.isSelected()) { // user modeÏóê Ï≤¥ÌÅ¨ ÎêòÏñ¥ÏûàÏùÑ Í≤ΩÏö∞ (ÏÇ¨Ïö©Ïûê cMODE : 1)
						if(cl.Mode_Check(LV.loginTextField.getText(), LV.passwordField.getText(), 1)) {
							// ------- Î°úÍ∑∏Ïù∏ ÏÑ±Í≥µ!! -------
							
							/*	ÌôîÎ©¥ Ï†ÑÌôò	*/
							LV.setVisible(false);
							LV.GV.getInstance().setVisible(true);
							
							/*	ÏÇ¨Ïö©Ïûê Î°úÍ∑∏Ïù∏ Îì§Ïñ¥Í∞îÏùÑ Í≤ΩÏö∞ Ïù¥Î≤§Ìä∏ Ï≤òÎ¶¨	*/
							String id = LV.loginTextField.getText();
							
							GUI.la[0].setText("ÏïÑÏù¥Îîî : " + id);
							GUI.la[2].setText("Ìè¨Ïù∏Ìä∏ : "+ dao.getInstance().getCash(id));
							connectServer();
						}
						else {
							// ------- Î°úÍ∑∏Ïù∏ Ïã§Ìå®... -------
							return;
						}
					} else {}
				} else if (obj == LV.SignUpbtn) { // ÌöåÏõêÍ∞ÄÏûÖ Î≤ÑÌäºÏùÑ ÎàåÎ†ÄÏùÑ Í≤ΩÏö∞
					LV.cardLayout.show(LV.window, "signUp");
				} else if (obj == LV.previousBtn) { // Ìà¥Î∞î Ïù¥Ï†Ñ Î≤ÑÌäºÏùÑ ÎàåÎ†ÄÏùÑ Í≤ΩÏö∞
					System.out.println("PREV TEST");
					LV.cardLayout.show(LV.window, "layer");
>>>>>>> origin/project1
				} else {

				}
			}
		});
<<<<<<< HEAD
		LV.adminView.addButtonActionListener(new ActionListener() { // ∞¸∏Æ¿⁄ ∫‰ ∑π¿Ãæ∆øÙ
			@Override
			public void actionPerformed(ActionEvent e) {
				Object obj = e.getSource();
				if (obj == LV.adminView.cm_btn) { // ∞¸∏Æ¿⁄ ∫‰ø°º≠ ∞Ì∞¥∞¸∏Æ πˆ∆∞¿ª ¥≠∑∂¿ª ∞ÊøÏ
					CM.getInstance().setVisible(true);
					LV.getInstance().setVisible(false);
					cl.Mode_Check();
					
//					comboFlag = true;
				} else if (obj == LV.adminView.pm_btn) { // ∞¸∏Æ¿⁄ ∫‰ø°º≠ ªÛ«∞∞¸∏Æ πˆ∆∞¿ª ¥≠∑∂¿ª ∞ÊøÏ
					PM.getInstance().setVisible(true);
					LV.getInstance().setVisible(false);
					cl.Mode_Check();
				}
			}
		});
		LV.signUpView.addButtonActionListener(new ActionListener() { // »∏ø¯∞¸∏Æ ∫‰
			@Override
			public void actionPerformed(ActionEvent e) {
				Object obj = e.getSource();
				if (obj == LV.signUpView.IdOverlapbtn) { // »∏ø¯∞¸∏Æ ∫‰ø°º≠ ¡ﬂ∫π»Æ¿Œ πˆ∆∞¿ª ¥≠∑∂¿ª ∞ÊøÏ
					try {
						JOptionPane.showMessageDialog(null, "¿Ã æ∆¿Ãµ ¡ﬂ∫π æ¯µ¬ ~~ ");
					} catch (Exception ex) {
						JOptionPane.showMessageDialog(null, "¥Ÿ∏• æ∆¿Ãµ∏¶ ¿‘∑¬«ÿ¡÷ººø‰");
					}
					cl.Mode_Check();
				} else if (obj == LV.signUpView.btn) { // »∏ø¯∞¸∏Æ ∫‰ø°º≠ øœ∑· πˆ∆∞¿ª ¥≠∑∂¿ª ∞ÊøÏ
					try {
						JOptionPane.showMessageDialog(null, "»∏ø¯∞°¿‘¿ª √‡«œ«’¥œ¥Ÿ!!");
						LV.getInstance().cardLayout.show(LV.getInstance().window, "layer");
					} catch (Exception ex) {
						JOptionPane.showMessageDialog(null, "»∏ø¯∞°¿‘ø° Ω«∆–«œø¥Ω¿¥œ¥Ÿ.");
					}
					cl.Mode_Check();
				}
			}
		});
		CM.addButtonActionListener(new ActionListener() { // ∞Ì∞¥∞¸∏Æ ∫‰
			@Override
			public void actionPerformed(ActionEvent e) {
				Object obj = e.getSource();
				if (obj == CM.chatInput) { // ∞Ì∞¥∞¸∏Æ ∫‰ø°º≠ √§∆√
					outMsg.println(gson.toJson(new Message("ƒ´øÓ≈Õ", CM.id, "", CM.chatInput.getText(), "admin", "sendtoall")));
					CM.chatInput.setText("");
					cl.Mode_Check();
				} else if (obj == CM.previousBtn) { // ∞Ì∞¥∞¸∏Æ ∫‰ø°º≠ ¿Ã¿¸ πˆ∆∞¿ª ¥≠∑∂¿ª ∞ÊøÏ
					CM.setVisible(false);
					LV.getInstance().setVisible(true);
					cl.Mode_Check();
				} else if (obj == CM.logoutBtn) { // ∞Ì∞¥∞¸∏Æ ∫‰ø°º≠ ∑Œ±◊æ∆øÙ πˆ∆∞¿ª ¥≠∑∂¿ª ∞ÊøÏ
=======
		
		//Î°úÍ∑∏Ïù∏ Î∑∞->Í¥ÄÎ¶¨Ïûê Î∑∞ Ïù¥Î≤§Ìä∏ Ï≤òÎ¶¨
		LV.adminView.addButtonActionListener(new ActionListener() { // Í¥ÄÎ¶¨Ïûê Î∑∞ Î†àÏù¥ÏïÑÏõÉ
			@Override
			public void actionPerformed(ActionEvent e) {
				Object obj = e.getSource();
				if (obj == LV.adminView.cm_btn) { // Í¥ÄÎ¶¨Ïûê Î∑∞ÏóêÏÑú Í≥†Í∞ùÍ¥ÄÎ¶¨ Î≤ÑÌäºÏùÑ ÎàåÎ†ÄÏùÑ Í≤ΩÏö∞
					CM.getInstance().setVisible(true);
					LV.getInstance().setVisible(false);
				} else if (obj == LV.adminView.pm_btn) { // Í¥ÄÎ¶¨Ïûê Î∑∞ÏóêÏÑú ÏÉÅÌíàÍ¥ÄÎ¶¨ Î≤ÑÌäºÏùÑ ÎàåÎ†ÄÏùÑ Í≤ΩÏö∞
					PM.getInstance().setVisible(true);
					LV.getInstance().setVisible(false);
				}
			}
		});
		
		//Î°úÍ∑∏Ïù∏ Î∑∞->ÌöåÏõêÍ∞ÄÏûÖ Î∑∞ Ïù¥Î≤§Ìä∏ Ï≤òÎ¶¨
		LV.signUpView.addButtonActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				JButton btn = (JButton)e.getSource();
				
				//SignUpViewÏóêÏÑú setNameÌïú Í∞íÏùÑ Í∞ÄÏßÄÍ≥† if-elseÎ¨∏ÏúºÎ°ú Î∂ÑÍ∏∞Ï°∞Í±¥ÏùÑ Ï£ºÏóàÎã§.
				if(btn.getName().equals("IdOverlapbtn")) {
					cs.Valid_Check(0);
				}
				else if(btn.getName().equals("NameOverlapbtn")) {
					cs.Valid_Check(1);
				}
				else if(btn.getName().equals("EmailOverlapbtn")) {
					cs.Valid_Check(2);
				}
				else { //ÌöåÏõêÍ∞ÄÏûÖ Ï†úÏ∂ú Î≤ÑÌäº (btn)
					try {
						cs.Register_Complete();
					} catch (SQLException e1) {
						e1.printStackTrace();
					}
				}
				
			}
		});
		
		//Í≥†Í∞ù Í¥ÄÎ¶¨ Î∑∞ Ïù¥Î≤§Ìä∏ Ï≤òÎ¶¨
		CM.addButtonActionListener(new ActionListener() { // Í≥†Í∞ùÍ¥ÄÎ¶¨ Î∑∞
			@Override
			public void actionPerformed(ActionEvent e) {
				Object obj = e.getSource();
				if (obj == CM.chatInput) { // Í≥†Í∞ùÍ¥ÄÎ¶¨ Î∑∞ÏóêÏÑú Ï±ÑÌåÖ
					CM.chatInput.getText();
					CM.chatContent.setText(CM.chatContent.getText() + CM.chatInput.getText() + "\n");
					CM.chatInput.setText("");
				} else if (obj == CM.previousBtn) { // Í≥†Í∞ùÍ¥ÄÎ¶¨ Î∑∞ÏóêÏÑú Ïù¥Ï†Ñ Î≤ÑÌäºÏùÑ ÎàåÎ†ÄÏùÑ Í≤ΩÏö∞
					CM.setVisible(false);
					LV.getInstance().setVisible(true);
				} else if (obj == CM.logoutBtn) { // Í≥†Í∞ùÍ¥ÄÎ¶¨ Î∑∞ÏóêÏÑú Î°úÍ∑∏ÏïÑÏõÉ Î≤ÑÌäºÏùÑ ÎàåÎ†ÄÏùÑ Í≤ΩÏö∞
>>>>>>> origin/project1
					CM.chatContent.setText("");
					CM.setVisible(false);
					LV.getInstance().setVisible(true);
					LV.getInstance().cardLayout.show(LV.getInstance().window, "layer");
<<<<<<< HEAD
					cl.Mode_Check();
				} else if (obj == CM.chatComboBox){
					/*∞Ì∞¥∞¸∏Æ √¢ ƒﬁ∫∏π⁄Ω∫ ¿Ã∫•∆Æ √≥∏Æ*/
					if(CM.chatComboBox.getSelectedIndex() == 0) {
						
					}
				} else {
					
				}
			}
		});
		PM.addButtonActionListener(new ActionListener() { // ªÛ«∞∞¸∏Æ ∫‰
			@Override
			public void actionPerformed(ActionEvent e) {
				Object obj = e.getSource();
				if (obj == PM.previousBtn) { // ªÛ«∞∞¸∏Æ ∫‰ø°º≠ ¿Ã¿¸ πˆ∆∞¿ª ¥≠∑∂¿ª ∞ÊøÏ
					PM.setVisible(false);
					LV.getInstance().setVisible(true);
					cl.Mode_Check();
				} else if (obj == PM.logoutBtn) { // ªÛ«∞∞¸∏Æ ∫‰ø°º≠ ∑Œ±◊æ∆øÙ πˆ∆∞¿ª ¥≠∑∂¿ª ∞ÊøÏ
					PM.setVisible(false);
					LV.getInstance().setVisible(true);
					LV.getInstance().cardLayout.show(LV.getInstance().window, "layer");
					cl.Mode_Check();
				} else {

				}
			}
		});
=======
				} else {

				}
			}
		});
		
		//ÏÉÅÌíà Í¥ÄÎ¶¨ Ïù¥Î≤§Ìä∏ Ï≤òÎ¶¨
		PM.addButtonActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				Object obj = e.getSource();
				if (obj == PM.previousBtn) { // ÏÉÅÌíàÍ¥ÄÎ¶¨ Î∑∞ÏóêÏÑú Ïù¥Ï†Ñ Î≤ÑÌäºÏùÑ ÎàåÎ†ÄÏùÑ Í≤ΩÏö∞
					PM.setVisible(false);
					LV.getInstance().setVisible(true);
				} else if (obj == PM.logoutBtn) { // ÏÉÅÌíàÍ¥ÄÎ¶¨ Î∑∞ÏóêÏÑú Î°úÍ∑∏ÏïÑÏõÉ Î≤ÑÌäºÏùÑ ÎàåÎ†ÄÏùÑ Í≤ΩÏö∞
					PM.setVisible(false);
					LV.getInstance().setVisible(true);
					LV.getInstance().cardLayout.show(LV.getInstance().window, "layer");
				} else if(obj == PM.btn[0]){  //Îì±Î°ù
					cp.insertion();
				} else if(obj == PM.btn[1]) { //Ï°∞Ìöå
					cp.show();
				} else if(obj == PM.btn[2]) { //ÏÇ≠Ï†ú
					cp.deletion();
				} else {}
			}
		});
		
>>>>>>> origin/project1
		GUI.addButtonActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				Object obj = e.getSource();
<<<<<<< HEAD
				
<<<<<<< HEAD
				if (obj == GUI.LogOutbtn) { // ªÁøÎ¿⁄ ∫‰ø°º≠ ∑Œ±◊æ∆øÙ πˆ∆∞¿ª ¥≠∑∂¿ª ∞ÊøÏ
					outMsg.println(gson.toJson(new Message(GUI.seat, GUI.id, "", "", "logout", "adminlogin")));
					GUI.msgInput.setText("");
=======
				if (obj == GUI.LogOutbtn) { // ªÛ«∞∞¸∏Æ ∫‰ø°º≠ ∑Œ±◊æ∆øÙ πˆ∆∞¿ª ¥≠∑∂¿ª ∞ÊøÏ
					outMsg.println(gson.toJson(new Message(m.getSeat(), m.getId(), "", "", "logout", "")));
>>>>>>> 0dc03679d7d637e8d09dc6b4506f4b2e92edcc2f
					cl.Mode_Check();
=======
				if (obj == GUI.LogOutbtn) { // ÏÉÅÌíàÍ¥ÄÎ¶¨ Î∑∞ÏóêÏÑú Î°úÍ∑∏ÏïÑÏõÉ Î≤ÑÌäºÏùÑ ÎàåÎ†ÄÏùÑ Í≤ΩÏö∞
					outMsg.println(gson.toJson(new Message(GUI.seat, GUI.id, "", "", "logout", "")));
>>>>>>> origin/project1
					try {
						outMsg.close();
						inMsg.close();
						socket.close();
					} catch (IOException ex) {
						ex.printStackTrace();
					}
<<<<<<< HEAD
					status = false;
					System.exit(0);
				} else if (obj == GUI.msgInput) {
<<<<<<< HEAD
					String test = gson.toJson(new Message(GUI.seat, GUI.id, "", GUI.msgInput.getText(), "sendtoadmin", "admins"));
					outMsg.println(test);
					System.out.println(test);
=======
					outMsg.println(gson.toJson(new Message(m.getSeat(), GUI.id, "", GUI.msgInput.getText(), "sendtoadmin", "")));
>>>>>>> 0dc03679d7d637e8d09dc6b4506f4b2e92edcc2f
					GUI.msgInput.setText("");
				}
			}
		});
		
=======
					System.exit(0);
					status = false;
				} else if (obj == GUI.msgInput) {
					outMsg.println(
							gson.toJson(new Message(GUI.seat, GUI.id, "", GUI.msgInput.getText(), "sendtoadmin", "")));
					GUI.msgInput.setText("");
				}
				else if(obj == GUI.sumb) {
					int value = Integer.parseInt(GUI.Cashl.getText());
					if(dao.getInstance().Cash_Check(LV.loginTextField.getText(), value)){
						JOptionPane.showMessageDialog(null, "Í≤∞Ï†úÍ∞Ä ÎêòÏóàÏäµÎãàÎã§.");
						GUI.la[2].setText("Ìè¨Ïù∏Ìä∏ : " + Integer.toString(Integer.parseInt(dao.getInstance().getCash(LV.loginTextField.getText()))-value));
					}
					else
						JOptionPane.showMessageDialog(null, "Ìè¨Ïù∏Ìä∏Í∞Ä Î∂ÄÏ°±Ìï©ÎãàÎã§.", "ERROR", JOptionPane.ERROR_MESSAGE);
				}
			}
		});
>>>>>>> origin/project1
	}

	public void connectServer() {
		try {
<<<<<<< HEAD
			// º“ƒœ ª˝º∫
			socket = new Socket(ip, 8888);
			logger.info("[Client]Server ø¨∞· º∫∞¯!!");

			// ¿‘√‚∑¬ Ω∫∆Æ∏≤ ª˝º∫
			inMsg = new BufferedReader(new InputStreamReader(socket.getInputStream()));
			outMsg = new PrintWriter(socket.getOutputStream(), true);

			// º≠πˆø° ∑Œ±◊¿Œ ∏ﬁΩ√¡ˆ ¿¸¥ﬁ
<<<<<<< HEAD
			if (CM.loginFlag) {
				m = new Message("ƒ´øÓ≈Õ", CM.id, "", "", "adminlogin", "");
			} else {
				m = new Message("0", GUI.id, "", "", "login", "adminlogin");
			}
			outMsg.println(gson.toJson(m));
=======
			if (CM.loginFlag == true) {
				m = new Message("0", GUI.id, "", "", "adminlogin", "");
			} else {
				m = new Message("0", GUI.id, "", "", "login", "");
			}
			outMsg.println(gson.toJson(m));
			

>>>>>>> 0dc03679d7d637e8d09dc6b4506f4b2e92edcc2f
			// ∏ﬁΩ√¡ˆ ºˆΩ≈¿ª ¿ß«— Ω∫∑πµÂ ª˝º∫
			thread = new Thread(this);
			thread.start();
			
<<<<<<< HEAD
=======
			
>>>>>>> 0dc03679d7d637e8d09dc6b4506f4b2e92edcc2f
			// ªÁøÎ¿⁄ ∫‰ø° Ω√∆Æ π¯»£ ¿˙¿Â
//			GUI.seat = m.getSeat();
//			GUI.id = m.getId();
		} catch (Exception e) {
			logger.log(Level.WARNING, "[MultiChatUI]connectServer() Exception πﬂª˝!!");
=======
			// ÏÜåÏºì ÏÉùÏÑ±
			socket = new Socket(ip, 8888);
			logger.info("[Client]Server Ïó∞Í≤∞ ÏÑ±Í≥µ!!");

			// ÏûÖÏ∂úÎ†• Ïä§Ìä∏Î¶º ÏÉùÏÑ±
			inMsg = new BufferedReader(new InputStreamReader(socket.getInputStream()));
			outMsg = new PrintWriter(socket.getOutputStream(), true);

			// ÏÑúÎ≤ÑÏóê Î°úÍ∑∏Ïù∏ Î©îÏãúÏßÄ Ï†ÑÎã¨
			if (CM.loginFlag == true) {
				m = new Message("", LV.id, "", "", "adminlogin", "");
			} else {
				m = new Message("", LV.id, "", "", "login", "");
			}
			outMsg.println(gson.toJson(m));

			// Î©îÏãúÏßÄ ÏàòÏã†ÏùÑ ÏúÑÌïú Ïä§Î†àÎìú ÏÉùÏÑ±
			thread = new Thread(this);
			thread.start();
		} catch (Exception e) {
			logger.log(Level.WARNING, "[MultiChatUI]connectServer() Exception Î∞úÏÉù!!");
>>>>>>> origin/project1
			e.printStackTrace();
		}
	}

	@Override
	public void run() {
<<<<<<< HEAD
		// ºˆΩ≈ ∏ﬁΩ√¡ˆ∏¶ √≥∏Æ«œ¥¬ µ• « ø‰«— ∫Øºˆ º±æ
		String msg;
		status = true;
		while (status) {
			try {
				// ∏ﬁΩ√¡ˆ ºˆΩ≈ π◊ ∆ƒΩÃ
				msg = inMsg.readLine();
<<<<<<< HEAD
				Message m_temp = gson.fromJson(msg, Message.class);
				System.out.println(msg);
//				System.out.println(m.getSeat());
				if(m.getSeat() == "0" && GUI.seat == "") {
					System.out.println("TEST");
					GUI.seat = m_temp.getSeat();
					m.setSeat(m_temp.getSeat());
				}
				// comboBox ∞ªΩ≈
//				if(comboFlag == true) {
//				CMchatData.comboRefreshData(m.getSeat());
//					comboFlag = false;
//				}
				// MultiChatData ∞¥√º∑Œ µ•¿Ã≈Õ ∞ªΩ≈
				if(CM.loginFlag)
				{	
					System.out.println("∞¸∏Æ¿⁄ ƒ⁄µÂ");
					CMchatData.refreshData(GUI.seat + " ¡¬ºÆ(" + m_temp.getId() + "):" + m_temp.getMsg() + "\n");
					CM.chatContent.setCaretPosition(CM.chatContent.getDocument().getLength());
				}
				else {
					System.out.println("ªÁøÎ¿⁄ ƒ⁄µÂ");
				GUIchatData.refreshData(GUI.seat + " ¡¬ºÆ(" + m_temp.getId() + "):" + m_temp.getMsg() + "\n");
=======
				m = gson.fromJson(msg, Message.class);
 
				// comboBox ∞ªΩ≈
//				if(comboFlag == true) {
				CMchatData.comboRefreshData(m.getSeat());
//					comboFlag = false;
//				}
				// MultiChatData ∞¥√º∑Œ µ•¿Ã≈Õ ∞ªΩ≈
				CMchatData.refreshData(m.getSeat() + "π¯ ¡¬ºÆ(" + m.getId() + "):" + m.getMsg() + "\n");
				GUIchatData.refreshData(m.getSeat() + "π¯ ¡¬ºÆ(" + m.getId() + "):" + m.getMsg() + "\n");
				// ƒøº≠∏¶ «ˆ¿Á ¥Î»≠ ∏ﬁΩ√¡ˆø° «•Ω√
				CM.chatContent.setCaretPosition(CM.chatContent.getDocument().getLength());
>>>>>>> 0dc03679d7d637e8d09dc6b4506f4b2e92edcc2f
				GUI.ta2.setCaretPosition(GUI.ta2.getDocument().getLength());
				}
				// ƒøº≠∏¶ «ˆ¿Á ¥Î»≠ ∏ﬁΩ√¡ˆø° «•Ω√
			} catch (IOException e) {
				logger.log(Level.WARNING, "[MultiChatUI]∏ﬁΩ√¡ˆ Ω∫∆Æ∏≤ ¡æ∑·!!");
			}
		}
		logger.info("[MultiChatUI]" + thread.getName() + " ∏ﬁΩ√¡ˆ ºˆΩ≈ Ω∫∑πµÂ ¡æ∑·µ !!");
	} // run()
	
	public static void main(String[] args) {
		PCController app = new PCController(LoginView.getInstance(), CusManager.getInstance(),ProdManager.getInstance(), GUIView.getInstance(), new AdminView(), new SignUpView(), new C_login(), new PCChatData(), new PCChatData());
		app.appMain();
	}
=======
		// ÏàòÏã† Î©îÏãúÏßÄÎ•º Ï≤òÎ¶¨ÌïòÎäî Îç∞ ÌïÑÏöîÌïú Î≥ÄÏàò ÏÑ†Ïñ∏
		String msg;
		status = true;

		while (status) {
			try {
				// Î©îÏãúÏßÄ ÏàòÏã† Î∞è ÌååÏã±
				msg = inMsg.readLine();
				m = gson.fromJson(msg, Message.class);
				String whisperMsg = "";

				// MultiChatData Í∞ùÏ≤¥Î°ú Îç∞Ïù¥ÌÑ∞ Í∞±Ïã†
				chatData.refreshData(m.getSeat() + "Î≤à Ï¢åÏÑù" + m.getId() + ":" + m.getMsg() + "\n");
				chatData2.refreshData(m.getSeat() + "Î≤à Ï¢åÏÑù" + m.getId() + ":" + m.getMsg() + "\n");
				// Ïª§ÏÑúÎ•º ÌòÑÏû¨ ÎåÄÌôî Î©îÏãúÏßÄÏóê ÌëúÏãú
				CM.chatContent.setCaretPosition(CM.chatContent.getDocument().getLength());
				GUI.ta2.setCaretPosition(GUI.ta2.getDocument().getLength());
			} catch (IOException e) {
				logger.log(Level.WARNING, "[MultiChatUI]Î©îÏãúÏßÄ Ïä§Ìä∏Î¶º Ï¢ÖÎ£å!!");
			}
		}
		logger.info("[MultiChatUI]" + thread.getName() + " Î©îÏãúÏßÄ ÏàòÏã† Ïä§Î†àÎìú Ï¢ÖÎ£åÎê®!!");
	} // run()
>>>>>>> origin/project1

}
